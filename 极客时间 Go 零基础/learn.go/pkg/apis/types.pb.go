// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package apis

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_f8d557e1883bc967, []int{0}
}
func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (dst *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(dst, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type PersonalRanks struct {
	PersonalRanks        []*PersonalRank `protobuf:"bytes,1,rep,name=personalRanks,proto3" json:"personalRanks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PersonalRanks) Reset()         { *m = PersonalRanks{} }
func (m *PersonalRanks) String() string { return proto.CompactTextString(m) }
func (*PersonalRanks) ProtoMessage()    {}
func (*PersonalRanks) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_f8d557e1883bc967, []int{1}
}
func (m *PersonalRanks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonalRanks.Unmarshal(m, b)
}
func (m *PersonalRanks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonalRanks.Marshal(b, m, deterministic)
}
func (dst *PersonalRanks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalRanks.Merge(dst, src)
}
func (m *PersonalRanks) XXX_Size() int {
	return xxx_messageInfo_PersonalRanks.Size(m)
}
func (m *PersonalRanks) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalRanks.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalRanks proto.InternalMessageInfo

func (m *PersonalRanks) GetPersonalRanks() []*PersonalRank {
	if m != nil {
		return m.PersonalRanks
	}
	return nil
}

type PersonalRank struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sex                  string   `protobuf:"bytes,2,opt,name=sex,proto3" json:"sex,omitempty"`
	RankNumber           int64    `protobuf:"varint,3,opt,name=rankNumber,proto3" json:"rankNumber,omitempty"`
	FatRate              float32  `protobuf:"fixed32,4,opt,name=fatRate,proto3" json:"fatRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonalRank) Reset()         { *m = PersonalRank{} }
func (m *PersonalRank) String() string { return proto.CompactTextString(m) }
func (*PersonalRank) ProtoMessage()    {}
func (*PersonalRank) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_f8d557e1883bc967, []int{2}
}
func (m *PersonalRank) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonalRank.Unmarshal(m, b)
}
func (m *PersonalRank) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonalRank.Marshal(b, m, deterministic)
}
func (dst *PersonalRank) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalRank.Merge(dst, src)
}
func (m *PersonalRank) XXX_Size() int {
	return xxx_messageInfo_PersonalRank.Size(m)
}
func (m *PersonalRank) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalRank.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalRank proto.InternalMessageInfo

func (m *PersonalRank) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PersonalRank) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *PersonalRank) GetRankNumber() int64 {
	if m != nil {
		return m.RankNumber
	}
	return 0
}

func (m *PersonalRank) GetFatRate() float32 {
	if m != nil {
		return m.FatRate
	}
	return 0
}

type PersonalInformationFatRate struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FatRate              float32  `protobuf:"fixed32,2,opt,name=fatRate,proto3" json:"fatRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonalInformationFatRate) Reset()         { *m = PersonalInformationFatRate{} }
func (m *PersonalInformationFatRate) String() string { return proto.CompactTextString(m) }
func (*PersonalInformationFatRate) ProtoMessage()    {}
func (*PersonalInformationFatRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_f8d557e1883bc967, []int{3}
}
func (m *PersonalInformationFatRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonalInformationFatRate.Unmarshal(m, b)
}
func (m *PersonalInformationFatRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonalInformationFatRate.Marshal(b, m, deterministic)
}
func (dst *PersonalInformationFatRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalInformationFatRate.Merge(dst, src)
}
func (m *PersonalInformationFatRate) XXX_Size() int {
	return xxx_messageInfo_PersonalInformationFatRate.Size(m)
}
func (m *PersonalInformationFatRate) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalInformationFatRate.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalInformationFatRate proto.InternalMessageInfo

func (m *PersonalInformationFatRate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PersonalInformationFatRate) GetFatRate() float32 {
	if m != nil {
		return m.FatRate
	}
	return 0
}

type PersonalInformationList struct {
	Items                []*PersonalInformation `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PersonalInformationList) Reset()         { *m = PersonalInformationList{} }
func (m *PersonalInformationList) String() string { return proto.CompactTextString(m) }
func (*PersonalInformationList) ProtoMessage()    {}
func (*PersonalInformationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_f8d557e1883bc967, []int{4}
}
func (m *PersonalInformationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonalInformationList.Unmarshal(m, b)
}
func (m *PersonalInformationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonalInformationList.Marshal(b, m, deterministic)
}
func (dst *PersonalInformationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalInformationList.Merge(dst, src)
}
func (m *PersonalInformationList) XXX_Size() int {
	return xxx_messageInfo_PersonalInformationList.Size(m)
}
func (m *PersonalInformationList) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalInformationList.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalInformationList proto.InternalMessageInfo

func (m *PersonalInformationList) GetItems() []*PersonalInformation {
	if m != nil {
		return m.Items
	}
	return nil
}

type PersonalInformation struct {
	// @gotags: gorm:"primaryKey;column:id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// @gotags: gorm:"column:name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @gotags: gorm:"column:sex"
	Sex string `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	// @gotags: gorm:"column:tall"
	Tall float32 `protobuf:"fixed32,4,opt,name=tall,proto3" json:"tall,omitempty"`
	// @gotags: gorm:"column:weight"
	Weight float32 `protobuf:"fixed32,5,opt,name=weight,proto3" json:"weight,omitempty"`
	// @gotags: gorm:"column:age"
	Age                  int64    `protobuf:"varint,6,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonalInformation) Reset()         { *m = PersonalInformation{} }
func (m *PersonalInformation) String() string { return proto.CompactTextString(m) }
func (*PersonalInformation) ProtoMessage()    {}
func (*PersonalInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_f8d557e1883bc967, []int{5}
}
func (m *PersonalInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonalInformation.Unmarshal(m, b)
}
func (m *PersonalInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonalInformation.Marshal(b, m, deterministic)
}
func (dst *PersonalInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonalInformation.Merge(dst, src)
}
func (m *PersonalInformation) XXX_Size() int {
	return xxx_messageInfo_PersonalInformation.Size(m)
}
func (m *PersonalInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonalInformation.DiscardUnknown(m)
}

var xxx_messageInfo_PersonalInformation proto.InternalMessageInfo

func (m *PersonalInformation) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PersonalInformation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PersonalInformation) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *PersonalInformation) GetTall() float32 {
	if m != nil {
		return m.Tall
	}
	return 0
}

func (m *PersonalInformation) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *PersonalInformation) GetAge() int64 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*Null)(nil), "apis.null")
	proto.RegisterType((*PersonalRanks)(nil), "apis.PersonalRanks")
	proto.RegisterType((*PersonalRank)(nil), "apis.PersonalRank")
	proto.RegisterType((*PersonalInformationFatRate)(nil), "apis.PersonalInformationFatRate")
	proto.RegisterType((*PersonalInformationList)(nil), "apis.PersonalInformationList")
	proto.RegisterType((*PersonalInformation)(nil), "apis.PersonalInformation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RankServiceClient is the client API for RankService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RankServiceClient interface {
	Register(ctx context.Context, in *PersonalInformation, opts ...grpc.CallOption) (*PersonalInformation, error)
	Update(ctx context.Context, in *PersonalInformation, opts ...grpc.CallOption) (*PersonalInformationFatRate, error)
	GetFatRate(ctx context.Context, in *PersonalInformation, opts ...grpc.CallOption) (*PersonalRank, error)
	GetTop(ctx context.Context, in *Null, opts ...grpc.CallOption) (*PersonalRanks, error)
	RegisterPersons(ctx context.Context, opts ...grpc.CallOption) (RankService_RegisterPersonsClient, error)
	WatchPersons(ctx context.Context, in *Null, opts ...grpc.CallOption) (RankService_WatchPersonsClient, error)
}

type rankServiceClient struct {
	cc *grpc.ClientConn
}

func NewRankServiceClient(cc *grpc.ClientConn) RankServiceClient {
	return &rankServiceClient{cc}
}

func (c *rankServiceClient) Register(ctx context.Context, in *PersonalInformation, opts ...grpc.CallOption) (*PersonalInformation, error) {
	out := new(PersonalInformation)
	err := c.cc.Invoke(ctx, "/apis.RankService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rankServiceClient) Update(ctx context.Context, in *PersonalInformation, opts ...grpc.CallOption) (*PersonalInformationFatRate, error) {
	out := new(PersonalInformationFatRate)
	err := c.cc.Invoke(ctx, "/apis.RankService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rankServiceClient) GetFatRate(ctx context.Context, in *PersonalInformation, opts ...grpc.CallOption) (*PersonalRank, error) {
	out := new(PersonalRank)
	err := c.cc.Invoke(ctx, "/apis.RankService/GetFatRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rankServiceClient) GetTop(ctx context.Context, in *Null, opts ...grpc.CallOption) (*PersonalRanks, error) {
	out := new(PersonalRanks)
	err := c.cc.Invoke(ctx, "/apis.RankService/GetTop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rankServiceClient) RegisterPersons(ctx context.Context, opts ...grpc.CallOption) (RankService_RegisterPersonsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RankService_serviceDesc.Streams[0], "/apis.RankService/RegisterPersons", opts...)
	if err != nil {
		return nil, err
	}
	x := &rankServiceRegisterPersonsClient{stream}
	return x, nil
}

type RankService_RegisterPersonsClient interface {
	Send(*PersonalInformation) error
	CloseAndRecv() (*PersonalInformationList, error)
	grpc.ClientStream
}

type rankServiceRegisterPersonsClient struct {
	grpc.ClientStream
}

func (x *rankServiceRegisterPersonsClient) Send(m *PersonalInformation) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rankServiceRegisterPersonsClient) CloseAndRecv() (*PersonalInformationList, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PersonalInformationList)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rankServiceClient) WatchPersons(ctx context.Context, in *Null, opts ...grpc.CallOption) (RankService_WatchPersonsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RankService_serviceDesc.Streams[1], "/apis.RankService/WatchPersons", opts...)
	if err != nil {
		return nil, err
	}
	x := &rankServiceWatchPersonsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RankService_WatchPersonsClient interface {
	Recv() (*PersonalInformation, error)
	grpc.ClientStream
}

type rankServiceWatchPersonsClient struct {
	grpc.ClientStream
}

func (x *rankServiceWatchPersonsClient) Recv() (*PersonalInformation, error) {
	m := new(PersonalInformation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RankServiceServer is the server API for RankService service.
type RankServiceServer interface {
	Register(context.Context, *PersonalInformation) (*PersonalInformation, error)
	Update(context.Context, *PersonalInformation) (*PersonalInformationFatRate, error)
	GetFatRate(context.Context, *PersonalInformation) (*PersonalRank, error)
	GetTop(context.Context, *Null) (*PersonalRanks, error)
	RegisterPersons(RankService_RegisterPersonsServer) error
	WatchPersons(*Null, RankService_WatchPersonsServer) error
}

func RegisterRankServiceServer(s *grpc.Server, srv RankServiceServer) {
	s.RegisterService(&_RankService_serviceDesc, srv)
}

func _RankService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonalInformation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RankServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.RankService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RankServiceServer).Register(ctx, req.(*PersonalInformation))
	}
	return interceptor(ctx, in, info, handler)
}

func _RankService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonalInformation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RankServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.RankService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RankServiceServer).Update(ctx, req.(*PersonalInformation))
	}
	return interceptor(ctx, in, info, handler)
}

func _RankService_GetFatRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonalInformation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RankServiceServer).GetFatRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.RankService/GetFatRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RankServiceServer).GetFatRate(ctx, req.(*PersonalInformation))
	}
	return interceptor(ctx, in, info, handler)
}

func _RankService_GetTop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RankServiceServer).GetTop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.RankService/GetTop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RankServiceServer).GetTop(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _RankService_RegisterPersons_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RankServiceServer).RegisterPersons(&rankServiceRegisterPersonsServer{stream})
}

type RankService_RegisterPersonsServer interface {
	SendAndClose(*PersonalInformationList) error
	Recv() (*PersonalInformation, error)
	grpc.ServerStream
}

type rankServiceRegisterPersonsServer struct {
	grpc.ServerStream
}

func (x *rankServiceRegisterPersonsServer) SendAndClose(m *PersonalInformationList) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rankServiceRegisterPersonsServer) Recv() (*PersonalInformation, error) {
	m := new(PersonalInformation)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RankService_WatchPersons_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Null)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RankServiceServer).WatchPersons(m, &rankServiceWatchPersonsServer{stream})
}

type RankService_WatchPersonsServer interface {
	Send(*PersonalInformation) error
	grpc.ServerStream
}

type rankServiceWatchPersonsServer struct {
	grpc.ServerStream
}

func (x *rankServiceWatchPersonsServer) Send(m *PersonalInformation) error {
	return x.ServerStream.SendMsg(m)
}

var _RankService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apis.RankService",
	HandlerType: (*RankServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _RankService_Register_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RankService_Update_Handler,
		},
		{
			MethodName: "GetFatRate",
			Handler:    _RankService_GetFatRate_Handler,
		},
		{
			MethodName: "GetTop",
			Handler:    _RankService_GetTop_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterPersons",
			Handler:       _RankService_RegisterPersons_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "WatchPersons",
			Handler:       _RankService_WatchPersons_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "types.proto",
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_types_f8d557e1883bc967) }

var fileDescriptor_types_f8d557e1883bc967 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x4d, 0xaf, 0xd3, 0x30,
	0x10, 0x8c, 0x93, 0xbc, 0x00, 0xdb, 0x57, 0x40, 0x5b, 0x09, 0x4c, 0x25, 0x50, 0xe4, 0x53, 0x24,
	0xa4, 0x82, 0xca, 0x05, 0x0e, 0x5c, 0x38, 0x50, 0x15, 0x21, 0x40, 0x06, 0xc4, 0xd9, 0x6d, 0xdd,
	0xd6, 0x6a, 0xe2, 0x44, 0xb1, 0xcb, 0xc7, 0x4f, 0xe0, 0xca, 0x2f, 0x46, 0x4e, 0x1a, 0x48, 0x5f,
	0x93, 0xdc, 0x36, 0x3b, 0xe3, 0xd9, 0xdd, 0xd9, 0x0d, 0x8c, 0xec, 0xaf, 0x42, 0x9a, 0x59, 0x51,
	0xe6, 0x36, 0xc7, 0x50, 0x14, 0xca, 0xb0, 0x08, 0x42, 0x7d, 0x4c, 0x53, 0xb6, 0x84, 0xf1, 0x27,
	0x59, 0x9a, 0x5c, 0x8b, 0x94, 0x0b, 0x7d, 0x30, 0xf8, 0x12, 0xc6, 0x45, 0x3b, 0x41, 0x49, 0x1c,
	0x24, 0xa3, 0x39, 0xce, 0xdc, 0xb3, 0x59, 0x9b, 0xcb, 0xcf, 0x89, 0x4c, 0xc3, 0x75, 0x1b, 0x46,
	0x84, 0x50, 0x8b, 0x4c, 0x52, 0x12, 0x93, 0xe4, 0x0e, 0xaf, 0x62, 0xbc, 0x0f, 0x81, 0x91, 0x3f,
	0xa9, 0x5f, 0xa5, 0x5c, 0x88, 0x4f, 0x00, 0x4a, 0xa1, 0x0f, 0x1f, 0x8e, 0xd9, 0x4a, 0x96, 0x34,
	0x88, 0x49, 0x12, 0xf0, 0x56, 0x06, 0x29, 0xdc, 0xda, 0x0a, 0xcb, 0x85, 0x95, 0x34, 0x8c, 0x49,
	0xe2, 0xf3, 0xe6, 0x93, 0xbd, 0x83, 0x69, 0x53, 0x6f, 0xa9, 0xb7, 0x79, 0x99, 0x09, 0xab, 0x72,
	0xfd, 0xb6, 0x46, 0x3b, 0xab, 0xb7, 0xb4, 0xfc, 0x9b, 0x5a, 0x0f, 0x3b, 0xb4, 0xde, 0x2b, 0x63,
	0xf1, 0x19, 0x5c, 0x29, 0x2b, 0xb3, 0xc6, 0x88, 0x47, 0xe7, 0x46, 0xb4, 0xd8, 0xbc, 0xe6, 0xb1,
	0xdf, 0x04, 0x26, 0x1d, 0x30, 0xde, 0x05, 0x5f, 0x6d, 0xaa, 0x7e, 0x02, 0xee, 0xab, 0xcd, 0xbf,
	0x0e, 0xfd, 0x4b, 0x7f, 0x82, 0xff, 0xfe, 0x20, 0x84, 0x56, 0xa4, 0xe9, 0x69, 0xf8, 0x2a, 0xc6,
	0x07, 0x10, 0xfd, 0x90, 0x6a, 0xb7, 0xb7, 0xf4, 0xaa, 0xca, 0x9e, 0xbe, 0xdc, 0x6b, 0xb1, 0x93,
	0x34, 0xaa, 0x4a, 0xb8, 0x70, 0xfe, 0x27, 0x80, 0x91, 0x5b, 0xc6, 0x67, 0x59, 0x7e, 0x57, 0x6b,
	0x89, 0x6f, 0xe0, 0x36, 0x97, 0x3b, 0x65, 0xac, 0x2c, 0xb1, 0x7f, 0x92, 0x69, 0x3f, 0xc4, 0x3c,
	0x5c, 0x40, 0xf4, 0xb5, 0xd8, 0x38, 0x8f, 0x07, 0x14, 0xe2, 0x5e, 0xe8, 0xb4, 0x20, 0xe6, 0xe1,
	0x6b, 0x80, 0x85, 0xb4, 0xcd, 0xc2, 0x06, 0xc4, 0x3a, 0x8e, 0x8f, 0x79, 0xf8, 0x14, 0xa2, 0x85,
	0xb4, 0x5f, 0xf2, 0x02, 0xa1, 0xc6, 0xdd, 0x41, 0x4f, 0x27, 0x97, 0x5c, 0xc3, 0x3c, 0xfc, 0x08,
	0xf7, 0x9a, 0xc1, 0x6b, 0xc8, 0x0c, 0x15, 0x7c, 0xdc, 0x0b, 0xb9, 0x93, 0x60, 0x5e, 0x42, 0xf0,
	0x15, 0x5c, 0x7f, 0x13, 0x76, 0xbd, 0x6f, 0xd4, 0xda, 0x3d, 0x0c, 0xd9, 0xf7, 0x9c, 0xac, 0xa2,
	0xea, 0x47, 0x7c, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x30, 0x98, 0x88, 0x97, 0x03, 0x00,
	0x00,
}
